demcu #define BLYNK_PRINT Serial
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>
#include<Servo.h>
#include <LiquidCrystal_I2C.h>


char auth[] = "YOUR BLYNK AUTHENTICATION TOKEN;
char ssid[] = "YOUR SSID";
char password[] = "YOUR WIFI PASSWORD";

const char* host = "maker.ifttt.com";


Servo servo1;
Servo servo2;
Servo servo3;
LiquidCrystal_I2C lcd(0x27,16,2);
int show=1; //lcd display's
int servo_top = 12, servo_mid = 13, servo_bot = 15, buzzer = 2, scl = 5, sda = 4;
int ir_sensor = 0, button = 16;
int state=0, old_state=0;
int i=0, angle = 80, object=1, object_old = 1;
  

BLYNK_WRITE(V1)
{
  int state = param.asInt(); // assigning incoming value from pin V1 to a variable
  Serial.print("V1 Slider value is: ");
  Serial.println(state);
  Serial.println(old_state);
  if (state>old_state)
  {
    for (int i=0; i<2; i++)
    {
      digitalWrite(buzzer, HIGH);
      delay(300);
      digitalWrite(buzzer, LOW);
      delay(300);
      digitalWrite(buzzer, HIGH);
      delay(200);
      digitalWrite(buzzer, LOW);  
    }
    if (angle<180)
    {
      servo1.write(angle);
      angle = angle+80;
    }
    else if (angle<360)
    {
      int temp_angle = angle - 160;
      servo2.write(temp_angle);
      angle = angle +80;
    }
    else if (angle>=360)
    {
      angle = 0;
      servo1.write(angle);
      delay(3000);
      servo2.write(angle);
      send_finished_email();
      angle = angle+80;
    }
  }
  else if (state==0)
    old_state = 0;
}

void send_taken_email()
{
  WiFiClient client; 
  const int httpPort = 80;  
  if (!client.connect(host, httpPort)) {  
        Serial.println("connection failed");  
  return;} 
  char a='y';
  if (a=='y'){         
          String url = "YOUR WEBHOOK URL (from IFTTT)"; 
          Serial.print("Requesting URL: ");
          Serial.println(url);                
           client.print(String("GET ") + url + " HTTP/1.1\r\n" + "Host: " + host + "\r\n" +"Connection: close\r\n\r\n");    
                          }            
  
  else{
  Serial.println("Correct character not pressed.Try again");
  
  }
  delay(1000);    
}

void send_finished_email()
{
  WiFiClient client; 
  const int httpPort = 80;  
  if (!client.connect(host, httpPort)) {  
        Serial.println("connection failed");  
  return;} 
  char a='y';
  if (a=='y'){         
          String url = "YOUR WEBHOOK URL2 (from IFTTT)"; 
          Serial.print("Requesting URL: ");
          Serial.println(url);                
           client.print(String("GET ") + url + " HTTP/1.1\r\n" + "Host: " + host + "\r\n" +"Connection: close\r\n\r\n");    
                          }            
  
  else{
  Serial.println("Correct character not pressed.Try again");  
  }
  delay(1000);    
}


void setup()
{
  Serial.begin(115200);
  pinMode(servo_top,OUTPUT);
  pinMode(servo_mid, OUTPUT);
  pinMode(servo_bot, OUTPUT);
  pinMode(buzzer, OUTPUT);
  pinMode(scl, OUTPUT);
  pinMode(sda, OUTPUT);
  pinMode(button, INPUT);
  pinMode(ir_sensor, INPUT);
  
  digitalWrite(buzzer, LOW);
  Blynk.begin(auth, ssid, password);
  
  servo1.attach(servo_top);
  servo2.attach(servo_mid);
  servo3.attach(servo_bot);
  servo1.write(0);
  servo2.write(0);
  servo3.write(90);

  //lcd setup test

  //email-webhook
  Serial.begin(115200);
  delay(100); 
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }  
  Serial.println("");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());  
}

void loop()
{
  Blynk.run();

  //connect to webhook for email
  WiFiClient client; 
  const int httpPort = 80;

  //IR sensor detection
  object = digitalRead(ir_sensor);
  if (object < object_old)
  {
    servo3.write(180);
    delay(2000);
    servo3.write(90);
    object_old = object;
    send_taken_email();         
  }
  else if (object>= object_old)
  {
    object_old = object;
    servo3.write(90);
  }
}
